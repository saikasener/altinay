<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="cdt.managedbuild.config.gnu.exe.debug">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.exe.debug" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.GNU_ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="" artifactName="${ProjName}.bin" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.gnu.exe.debug" name="Debug" parent="cdt.managedbuild.config.gnu.exe.debug" postbuildStep="mkdir -p ${ProjDirPath}/../../../Bin/Linux/$(ARCH)/Debug ; cp ${ProjName}.bin ${ProjDirPath}/../../../Bin/Linux/$(ARCH)/Debug/${ProjName}">
					<folderInfo id="cdt.managedbuild.config.gnu.exe.debug" name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.gnu.exe.debug" name="Linux GCC" superClass="cdt.managedbuild.toolchain.gnu.exe.debug">
							<targetPlatform id="cdt.managedbuild.target.gnu.platform.exe.debug" name="Debug Platform" superClass="cdt.managedbuild.target.gnu.platform.exe.debug"/>
							<builder buildPath="${workspace_loc:/EcMasterDemoMinimal}/Debug" id="cdt.managedbuild.target.gnu.builder.exe.debug" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" superClass="cdt.managedbuild.target.gnu.builder.exe.debug"/>
							<tool command="$(CROSS_COMPILE)g++" commandLinePattern="${COMMAND} $(CFLAGS) ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" id="cdt.managedbuild.tool.gnu.archiver.base" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
							<tool command="$(CROSS_COMPILE)g++" commandLinePattern="${COMMAND} $(CFLAGS) ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.debug" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.debug">
								<option id="gnu.cpp.compiler.exe.debug.option.optimization.level" name="Optimization Level" superClass="gnu.cpp.compiler.exe.debug.option.optimization.level" value="gnu.cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="gnu.cpp.compiler.exe.debug.option.debugging.level" name="Debug Level" superClass="gnu.cpp.compiler.exe.debug.option.debugging.level" value="gnu.cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="gnu.cpp.compiler.option.include.paths" name="Include paths (-I)" superClass="gnu.cpp.compiler.option.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/Common/Linux"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/INC/Linux"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/EcMasterDemoMinimal"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/Common"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/INC"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Sources/Common"/>
								</option>
								<option id="gnu.cpp.compiler.option.preprocessor.def" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="LINUX"/>
									<listOptionValue builtIn="false" value="DEBUG"/>
								</option>
								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
							</tool>
							<tool command="$(CROSS_COMPILE)gcc" commandLinePattern="${COMMAND} $(CFLAGS) ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" id="cdt.managedbuild.tool.gnu.c.compiler.exe.debug" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.debug">
								<option defaultValue="gnu.c.optimization.level.none" id="gnu.c.compiler.exe.debug.option.optimization.level" name="Optimization Level" superClass="gnu.c.compiler.exe.debug.option.optimization.level" valueType="enumerated"/>
								<option id="gnu.c.compiler.exe.debug.option.debugging.level" name="Debug Level" superClass="gnu.c.compiler.exe.debug.option.debugging.level" value="gnu.c.debugging.level.max" valueType="enumerated"/>
								<option id="gnu.c.compiler.option.include.paths" name="Include paths (-I)" superClass="gnu.c.compiler.option.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/Common/Linux"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/INC/Linux"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/EcMasterDemoMinimal"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/Common"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/INC"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Sources/Common"/>
								</option>
								<option id="gnu.cpp.compiler.option.preprocessor.def" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="LINUX"/>
									<listOptionValue builtIn="false" value="DEBUG"/>
								</option>
								<inputType id="cdt.managedbuild.tool.gnu.c.compiler.input" superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
							</tool>
							<tool command="$(CROSS_COMPILE)g++" commandLinePattern="${COMMAND} $(CFLAGS) ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" id="cdt.managedbuild.tool.gnu.c.linker.exe.debug" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.debug"/>
							<tool command="$(CROSS_COMPILE)g++" commandLinePattern="${COMMAND} $(CFLAGS) ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" id="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug">
								<option id="gnu.cpp.link.option.libs" name="Libraries (-l)" superClass="gnu.cpp.link.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="EcMaster"/>
									<listOptionValue builtIn="false" value="pthread"/>
									<listOptionValue builtIn="false" value="dl"/>
									<listOptionValue builtIn="false" value="rt"/>
								</option>
								<option id="gnu.cpp.link.option.paths" name="Library search path (-L)" superClass="gnu.cpp.link.option.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Bin/Linux/$(ARCH)/Debug"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Bin/Linux/$(ARCH)"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/LIB/Linux/$(ARCH)/Debug"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/LIB/Linux/$(ARCH)"/>
								</option>
								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool command="$(CROSS_COMPILE)as" id="cdt.managedbuild.tool.gnu.assembler.exe.debug" name="GCC Assembler" superClass="cdt.managedbuild.tool.gnu.assembler.exe.debug">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="cdt.managedbuild.config.gnu.exe.release">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.exe.release" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="bin" artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.gnu.exe.release" name="Release" parent="cdt.managedbuild.config.gnu.exe.release" postbuildStep="mkdir -p ${ProjDirPath}/../../../Bin/Linux/$(ARCH) ; cp ${ProjName}.bin ${ProjDirPath}/../../../Bin/Linux/$(ARCH)/${ProjName}">
					<folderInfo id="cdt.managedbuild.config.gnu.exe.release" name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.gnu.exe.release" name="Linux GCC" superClass="cdt.managedbuild.toolchain.gnu.exe.release">
							<targetPlatform id="cdt.managedbuild.target.gnu.platform.exe.release" name="Debug Platform" superClass="cdt.managedbuild.target.gnu.platform.exe.release"/>
							<builder buildPath="${workspace_loc:/EcMasterDemoMinimal}/Release" id="cdt.managedbuild.target.gnu.builder.exe.release" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" superClass="cdt.managedbuild.target.gnu.builder.exe.release"/>
							<tool command="$(CROSS_COMPILE)g++" commandLinePattern="${COMMAND} $(CFLAGS) ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" id="cdt.managedbuild.tool.gnu.archiver.base" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
							<tool command="$(CROSS_COMPILE)g++" commandLinePattern="${COMMAND} $(CFLAGS) ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release">
								<option id="gnu.cpp.compiler.exe.release.option.optimization.level" name="Optimization Level" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" value="gnu.cpp.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="gnu.cpp.compiler.exe.release.option.debugging.level" name="Debug Level" superClass="gnu.cpp.compiler.exe.release.option.debugging.level" value="gnu.cpp.compiler.debugging.level.none" valueType="enumerated"/>
								<option id="gnu.cpp.compiler.option.include.paths" name="Include paths (-I)" superClass="gnu.cpp.compiler.option.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/Common/Linux"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/INC/Linux"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/EcMasterDemoMinimal"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/Common"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/INC"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Sources/Common"/>
								</option>
								<option id="gnu.cpp.compiler.option.preprocessor.def" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="LINUX"/>
								</option>
								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
							</tool>
							<tool command="$(CROSS_COMPILE)gcc" commandLinePattern="${COMMAND} $(CFLAGS) ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" id="cdt.managedbuild.tool.gnu.c.compiler.exe.release" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.release">
								<option defaultValue="gnu.c.optimization.level.most" id="gnu.c.compiler.exe.release.option.optimization.level" name="Optimization Level" superClass="gnu.c.compiler.exe.release.option.optimization.level" valueType="enumerated"/>
								<option id="gnu.c.compiler.exe.release.option.debugging.level" name="Debug Level" superClass="gnu.c.compiler.exe.release.option.debugging.level" value="gnu.c.debugging.level.none" valueType="enumerated"/>
								<option id="gnu.c.compiler.option.include.paths" name="Include paths (-I)" superClass="gnu.c.compiler.option.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/Common/Linux"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/INC/Linux"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/EcMasterDemoMinimal"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Examples/Common"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/INC"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Sources/Common"/>
								</option>
								<option id="gnu.cpp.compiler.option.preprocessor.def" name="Defined symbols (-D)" superClass="gnu.cpp.compiler.option.preprocessor.def" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="LINUX"/>
								</option>
								<inputType id="cdt.managedbuild.tool.gnu.c.compiler.input" superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
							</tool>
							<tool command="$(CROSS_COMPILE)g++" commandLinePattern="${COMMAND} $(CFLAGS) ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" id="cdt.managedbuild.tool.gnu.c.linker.exe.release" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.release"/>
							<tool command="$(CROSS_COMPILE)g++" commandLinePattern="${COMMAND} $(CFLAGS) ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" id="cdt.managedbuild.tool.gnu.cpp.linker.exe.release" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.release">
								<option id="gnu.cpp.link.option.libs" name="Libraries (-l)" superClass="gnu.cpp.link.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="EcMaster"/>
									<listOptionValue builtIn="false" value="pthread"/>
									<listOptionValue builtIn="false" value="dl"/>
									<listOptionValue builtIn="false" value="rt"/>
								</option>
								<option id="gnu.cpp.link.option.paths" name="Library search path (-L)" superClass="gnu.cpp.link.option.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Bin/Linux/$(ARCH)/Release"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../Bin/Linux/$(ARCH)"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/LIB/Linux/$(ARCH)/Release"/>
									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../SDK/LIB/Linux/$(ARCH)"/>
								</option>
								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool command="$(CROSS_COMPILE)as" id="cdt.managedbuild.tool.gnu.assembler.exe.release" name="GCC Assembler" superClass="cdt.managedbuild.tool.gnu.assembler.exe.release">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="EcMasterDemoMinimal.cdt.managedbuild.target.gnu.exe" name="Executable" projectType="cdt.managedbuild.target.gnu.exe"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.release;cdt.managedbuild.config.gnu.exe.release;cdt.managedbuild.tool.gnu.cpp.compiler.exe.release;cdt.managedbuild.tool.gnu.cpp.compiler.input">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.release;cdt.managedbuild.config.gnu.exe.release;cdt.managedbuild.tool.gnu.c.compiler.exe.release;cdt.managedbuild.tool.gnu.c.compiler.input">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.debug;cdt.managedbuild.config.gnu.exe.debug;cdt.managedbuild.tool.gnu.cpp.compiler.exe.debug;cdt.managedbuild.tool.gnu.cpp.compiler.input">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.debug;cdt.managedbuild.config.gnu.exe.debug;cdt.managedbuild.tool.gnu.c.compiler.exe.debug;cdt.managedbuild.tool.gnu.c.compiler.input">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		</scannerConfigBuildInfo>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope" versionNumber="2">
		<configuration configurationName="Debug">
			<resource resourceType="PROJECT" workspacePath="/EcMasterDemoMinimal"/>
		</configuration>
		<configuration configurationName="Release">
			<resource resourceType="PROJECT" workspacePath="/EcMasterDemoMinimal"/>
		</configuration>
	</storageModule>
</cproject>
