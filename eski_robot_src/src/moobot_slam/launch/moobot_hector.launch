<launch>
  <!-- Set this true for simulation -->
  <arg name="simulation" default="false"/>
  <!-- Select the laser scanner
       Hokuyo: true
       Sick  : false -->
  <arg name="scanner_select" default="false"/>

  <!-- Arguments -->
  <arg name="map_size" default="2048"/>
  <arg name="scan_topic" default="scan_filtered"/>
  <arg name="scan_subscriber_queue_size" default="10"/> <!-- before 5 -->
  <arg name="pub_map_odom_transform" default="true"/>
  <arg name="tf_map_scanmatch_transform_frame_name" default="lazer_pos"/>
  <arg name="odom_frame_arg" value="odom" if="$(arg simulation)"/>
  <arg name="odom_frame_arg" default="odom" unless="$(arg simulation)"/>

  <!-- Prevent an error for an early transformation request from hector node before gazebo starts publishing it -->
  <arg name="node_start_delay" default="5.0" />

  <!-- Robot Description -->
  <arg name="model" default="moobot" />
  <arg name="urdf_model_path" default="$(find moobot_description)/urdf/$(arg model).urdf.xacro" />
  <param name="robot_description" command="$(find xacro)/xacro $(arg urdf_model_path)" />

  <!-- Start Gazebo argument "simulation" is set true -->
  <include file="$(find moobot_gazebo)/launch/moobot_spawn.launch" if="$(arg simulation)"/>

  <!-- Joint State and Robot State -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" respawn="false" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>
  <param name="base_frame" value = "base_footprint"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <group unless="$(arg simulation)">
    <!-- Hokuyo Node -->
    <node name="urg_node" pkg="urg_node" type="urg_node" output="screen" if="$(arg scanner_select)">
      <param name="ip_address" value="192.168.0.10" />
      <param name="publish_intensity" value="false" />
      <param name="frame_id" value="laser" />
      <param name="angle_min" value="-1.60876090527" />
      <param name="angle_max" value="1.60876090527" />
    </node>

    <!-- Sick s300 Expert -->
    <rosparam command="load" file="$(find moobot_navigation)/config/fs_s300.yaml" unless="$(arg scanner_select)"/>
    <node name="laser" pkg="cob_sick_s300" type="cob_sick_s300" respawn="false" output="screen" unless="$(arg scanner_select)" />

   <!-- <node pkg="tf" type="static_transform_publisher" name="basescan_to_laser" 
      args="0 0 0 0 0 0 /base_scan /laser 50" /> -->
    <node pkg="tf" type="static_transform_publisher" name="base_to_odom" 
      args="0 0 0 0 0 0 /odom /base_footprint 50" />
	
     <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="limit_scan_angle">
      <rosparam command="load" file="$(find moobot_navigation)/config/laserscan_filter.yaml" />
    </node>
  </group>


  <!-- Hector mapping / START -->
  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' ">

    <!-- Tf use -->
    <param name="use_tf_scan_transformation" value="true"/>
    <param name="use_tf_pose_start_estimate" value="false"/>
    <param name="pub_map_scanmatch_transform" value="true" />
    <param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>
    <param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />

    <param name="pub_map_odom_transform" value="true"/>
    <param name="map_frame" value="map" />
    <param name="base_frame" value="base_footprint" />
    <param name="odom_frame" value="$(arg odom_frame_arg)" />

    <!-- Map size / start point -->
    <param name="map_resolution" value="0.020"/>
    <param name="map_size" value="$(arg map_size)"/>
    <param name="map_start_x" value="0.3"/>
    <param name="map_start_y" value="0.3" />
    <param name="map_multi_res_levels" value="3" /> <!-- before 4 -->

    <!-- Map update parameters -->
    <param name="update_factor_free" value="0.4"/>
    <param name="update_factor_occupied" value="0.9" />
    <param name="map_update_distance_thresh" value="0.1"/> <!-- before: 0.05 -->
    <param name="map_update_angle_thresh" value="0.1" /> <!-- before: 0.04 -->
    <param name="map_pub_period" value="5" />
    <param name="laser_z_min_value" value= "-0.01" /> <!-- before: -0.01 -->
    <param name="laser_z_max_value" value= "0.01" /> <!-- before: 0.01 -->
    <param name="laser_min_dist" value="0.01" />
    <param name="laser_max_dist" value="29.5" />

    <!-- Advertising config -->
    <param name="advertise_map_service" value="true"/>
    <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
    <param name="scan_topic" value="$(arg scan_topic)"/>
  </node>
  <!-- Hector mapping / END -->


  <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server" output="screen" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' ">
    <param name="target_frame_name" type="string" value="/map" />
    <param name="source_frame_name" type="string" value="/base_footprint" />
    <param name="trajectory_update_rate" type="double" value="4" />
    <param name="trajectory_publish_rate" type="double" value="0.25" />
  </node>

  <!-- rviz -->
  <!-- <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find moobot_slam)/rviz/hokuyo_hector_slam.rviz" if="$(arg simulation)" /> -->

</launch>
